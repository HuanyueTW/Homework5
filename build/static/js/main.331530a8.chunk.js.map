{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserGithub","props","state","username","githubtUrl","avatarUrl","$","get","this","source","result","console","log","data","setState","login","html_url","avatar_url","created_at","updated_at","location","blog","followers","following","bio","src","width","height","alt","color","IconButton","aria-label","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gNAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oGCIRQ,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,WAAY,GACZC,UAAW,IALI,E,qDAQnB,WAAqB,IAAD,OAClBC,IAAEC,IAAIC,KAAKP,MAAMQ,QAAQ,SAACC,GACxBC,QAAQC,IAAIF,GACZ,IACU,EADJG,EAAOH,EACTG,GACF,EAAKC,UAAL,GACEX,SAAUU,EAAKE,MACfX,WAAYS,EAAKG,SACjBX,UAAWQ,EAAKI,WAChBC,WAAYL,EAAKK,WACjBC,WAAYN,EAAKM,WACjBC,SAAUP,EAAKO,SACfC,KAAMR,EAAKQ,KACXC,UAAWT,EAAKS,UAChBC,UAAWV,EAAKU,WATlB,yBAUYV,EAAKO,UAVjB,oBAWOP,EAAKW,KAXZ,S,oBAgBN,WACE,OACE,gCACE,qBAAKC,IAAKjB,KAAKN,MAAMG,UAAWqB,MAAQ,MAAMC,OAAS,MAAOC,IAAI,KAClE,6BAAKpB,KAAKN,MAAMC,WAChB,sBAAM0B,MAAQ,OAAd,SAAsBrB,KAAKN,MAAMC,WACjC,uBACA,uBACA,cAAC2B,EAAA,EAAD,CAAYD,MAAM,UAAUE,aAAW,kBAAvC,SAAyD,cAAC,IAAD,MAAuB,iCAAOvB,KAAKN,MAAMoB,UAAlB,eAAyCd,KAAKN,MAAMqB,UAApD,gBAChF,uBACA,cAACO,EAAA,EAAD,CAAYD,MAAM,UAAUE,aAAW,kBAAvC,SAAyD,cAAC,IAAD,MAAyB,+BAAOvB,KAAKN,MAAMkB,WACpG,uBACA,cAACU,EAAA,EAAD,CAAYD,MAAM,UAAUE,aAAW,kBAAvC,SAAyD,cAAC,IAAD,MAAsB,+BAAOvB,KAAKN,MAAMsB,MACjG,uBACA,cAACM,EAAA,EAAD,CAAYD,MAAM,UAAUE,aAAW,kBAAvC,SAAyD,cAAC,IAAD,MAAqB,mBAAGC,KAAMxB,KAAKN,MAAMmB,KAApB,SAA2Bb,KAAKN,MAAMmB,OACpH,uBACA,8DAAab,KAAKN,MAAMgB,cACxB,uBACA,8DAAaV,KAAKN,MAAMiB,qB,GAhDPc,IAAMC,WAuD/BC,IAASC,OACP,cAAC,EAAD,CAAY3B,OAAO,2CACnB4B,SAASC,eAAe,SAM1B/C,M","file":"static/js/main.331530a8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport $ from 'jquery';\nimport People from '@material-ui/icons/People';\nimport Email from '@material-ui/icons/Email';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from   '@material-ui/icons/Link';\nimport Location from   '@material-ui/icons/LocationCity';\n\nclass UserGithub extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      githubtUrl: '',\n      avatarUrl: '',\n    }\n  }\n  componentDidMount() {\n    $.get(this.props.source, (result) => {\n      console.log(result);\n      const data = result;\n      if (data) {\n        this.setState({\n          username: data.login,\n          githubtUrl: data.html_url,\n          avatarUrl: data.avatar_url,\n          created_at: data.created_at,\n          updated_at: data.updated_at,\n          location: data.location,\n          blog: data.blog,\n          followers: data.followers,\n          following: data.following,\n          location: data.location,\n          bio: data.bio\n        });\n      }\n    });\n  }\n  render() {\n    return (\n      <div>\n        <img src={this.state.avatarUrl} width = \"100\" height = \"100\"  alt=\"\" />\n        <h3>{this.state.username}</h3>\n        <font color = \"gray\">{this.state.username}</font>\n        <br></br>\n        <br></br>\n        <IconButton color=\"primary\" aria-label=\"Add a Lock icon\"><People /></IconButton><text>{this.state.followers} followers, {this.state.following} following</text>\n        <br></br>\n        <IconButton color=\"primary\" aria-label=\"Add a Lock icon\"><Location /></IconButton><text>{this.state.location}</text>\n        <br></br>\n        <IconButton color=\"primary\" aria-label=\"Add a Lock icon\"><Email /></IconButton><text>{this.state.bio}</text>\n        <br></br>\n        <IconButton color=\"primary\" aria-label=\"Add a Lock icon\"><Link /></IconButton><a href={this.state.blog}>{this.state.blog}</a>\n        <br></br>\n        <text>創建日期: {this.state.created_at}</text>\n        <br></br>\n        <text>更新日期: {this.state.updated_at}</text>\n        \n        \n      </div>\n    );\n  }\n}\nReactDOM.render(\n  <UserGithub source=\"https://api.github.com/users/huanyueTW\" />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}